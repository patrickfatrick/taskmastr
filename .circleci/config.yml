version: 2
jobs:
  test:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run: 
          name: Node version
          command: node -v
      - run: 
          name: NPM version
          command: npm -v
      - run:
          name: Install dependencies
          command: npm install
      - run: 
          name: Run unit tests
          command: npm test
      - run: 
          name: Generate code coverage
          command: cat ./coverage/**/lcov.info | ./node_modules/codecov/bin/codecov
      - store_artifacts:
          path: coverage
          prefix: coverage
  build:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Checkout staging branch
          command: |
            git fetch
            git checkout staging
            git rebase master
      - run: node -v
      - run: npm -v
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build production build
          command: npm run build
      - run:
          name: Commit build and push back to github
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "patrick.fricano@icloud.com"
            git config user.name "CircleCi"
            git commit --allow-empty -m "[ci] build"
            git push origin staging
  deploy_staging:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Deploy to Staging Environment
          command: >
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/taskmastr-staging.git master
  deploy_production:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Deploy to Production Environment
          command: >
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/taskmastr-production.git master
      - run:
          name: Bust Cloudflare caches
          command: > 
            curl -X DELETE "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE}/purge_cache"
            -H "X-Auth-Email: ${CLOUDFLARE_EMAIL}"
            -H "X-Auth-Key: ${CLOUDFLARE_AUTH}"
            -H "Content-Type: application/json"
            --data '{"files":["https://taskmastr.org/javascripts/bundle.js","https://taskmastr.org/stylesheets/styles.css"]}'
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy_staging:
          requires:
            - test
          filters:
            branches:
              only: staging
      - deploy_production:
          requires:
            - test
          filters:
            branches:
              only: production
